#Time the cabin need to accelerate (pos and neg)
def accTime(acc, stopDist)
    float timeA
    float timeOld
    timeOld = timeA
    if status is acceleration:
        timeAcc = (sqrt(2*acc*stopDist)) + timeOld
        timeAcc = round(timeAcc, 2)
    return timeAcc

#Time needed fo cambin to move the distance "dist"
def velTime(vel, dist)
    float timeV
    float timeOld
    timeOld = timeV
    if status is velocity:
        float timeVel = (vel/dist) +timeOld
        timeVel = round(timeVel, 2)
    return timeVel

#Complete time the cabin need (include accelaration and breaks) from point A to B
def compTime(timeV, timeA)
    float time
    time = timeV + timeA
    return time

def stoppingDistance(acc, timeAcc)
    float stopDist = (acc*time^2)/2
    stopDist = round(stopDist,2)
    if stopDist > moveDist:
        move()              
    else:
        accTime(stopDist)
        startBreak(timeAcc) #yet to be implemented
    return stopDist

#Set the appropariet speed 5m/s vertical, 1m/s horizontal
def move()
    if direction is "vertical":
        vel = vertVel
    else:
        vel = horVel
    return vel

#Time needed per person to get into the elevator
def boardingTime(int passengers)
    int boardtimeTime = 4+passengers
    return boardTime

int rotHorizontal = 3
int rotVertical = 3

